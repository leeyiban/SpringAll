package org.example.aop.A01init;

/**
 * @author:ningxh
 * @date:2023/5/27 22:01
 * @description: 先导部分
 */
public class AopInit {
    /*
    * AOP是面向切面编程。全称：Aspect Oriented Programming
    面向切面编程指的是：程序是运行期间，动态地将某段代码插入到原来方法代码的某些位置中。这就叫面向切面编程。
    *  */

    /*
    *   术语:
    *   通知(Advice)
        通知就是增强的代码。比如前置增强的代码。后置增强的代码。异常增强代码。这些就叫通知
        切面(Aspect)
        切面就是包含有通知代码的类叫切面。

        横切关注点
        横切关注点，就是我们可以添加增强代码的位置。比如前置位置，后置位置，异常位置。和返回值位置。这些都叫横切关注点。
        目标(Target)
        目标对象就是被关注的对象。或者被代理的对象。被增强的对象

        代理(Proxy)
        为了拦截目标对象方法，而被创建出来的那个对象，就叫做代理对象。
        或
        为了给目标对象增强而产生出来的对象，叫代理对象

        连接点(Joinpoint)
        连接点指的是横切关注点和程序代码的连接，叫连接点。

        切入点(pointcut)
        切入点指的是用户真正处理的连接点，叫切入点。

        在Spring中切入点通过org.springframework.aop.Pointcut 接口进行描述，它使用类和方法作为连接点的查询条件。
    *  */
}
